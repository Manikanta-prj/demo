{"version":3,"sources":["components/Landing.js","components/Results.js","components/Question.js","components/quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","useState","option","setOption","questions","setQuestions","useEffect","a","axios","get","res","data","results","fetch","className","onChange","event","target","value","to","pathname","aboutProps","Results","props","console","log","location","score","err","Question","answers","qus","incorrect_answers","correct_answer","question","map","e","index","onClick","onclick","Quiz","counter","setCounter","countquestion","setcountquestion","timeup","setTimeup","answered","setanswered","setScore","timer","setInterval","undefined","clearInterval","ans","String","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.087520ba.chunk.js","sourcesContent":["import React, { Fragment, useState,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\n\r\nconst Landing = () => {\r\n\r\n    const [option, setOption] = useState('easy');\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const selected = (event) => {\r\n        setOption(event.target.value)\r\n    }\r\n\r\n       useEffect(() => {\r\n        async function fetch() {\r\n            const res = await axios.get(`https://opentdb.com/api.php?amount=10&category=18&difficulty=${option}&type=multiple`)\r\n            setQuestions(res.data.results)\r\n        }\r\n        fetch();\r\n        \r\n    }, [option])\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <Fragment >\r\n            <div className=\"App\">\r\n                <select className=\"btn btn-primary my-1\"onChange={selected}>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"hard\">Hard</option>\r\n                </select><br></br>\r\n                <Link to={{pathname:'/quiz',aboutProps:{option,questions} }}className='btn btn-primary my-1 btn-dark' >Start Quiz</Link>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../App.css'\r\n\r\nconst Results = (props) => {\r\n\r\n    try {\r\n        console.log(props.location.results.score)\r\n        return <div>\r\n            correct answered :  {props.location.results.score} / 10<br></br>\r\n            <Link to='/' className='btn btn-primary my-1 btn-dark'>Retake test</Link>\r\n            </div>;\r\n    }\r\n    catch (err) {\r\n        return <Redirect to='/' />\r\n    }\r\n    \r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport '../App.css'\r\n\r\n\r\nconst Question = (props) => {\r\n    const count =0\r\n\r\n    const answers = [...props.qus.incorrect_answers, props.qus.correct_answer]\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className='line question'>\r\n                {props.qus.question}\r\n            </div>\r\n            <div className = 'top'>\r\n                {answers.map((e,index) => <div key={index} onClick={() =>props.onclick(e)} className='line answers'>{e}</div>)}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Question;","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Question from './Question';\r\n\r\n\r\n\r\n\r\n\r\nconst Quiz = (props) => {\r\n\r\n    const [questions, setQuestions] = useState(props.location.aboutProps.questions);\r\n    const [counter, setCounter] = useState(10);\r\n    const [countquestion, setcountquestion] = useState(0);\r\n    const [timeup, setTimeup] = useState(false);\r\n    const [answered, setanswered] = useState();\r\n    const [score,setScore] = useState(0)\r\n    \r\n    const onclick = (event) => {\r\n        const ans = questions[countquestion].correct_answer;\r\n\r\n        if (String(event) == String(ans)) {\r\n            setanswered(true)\r\n            setScore(score + 1);\r\n        }\r\n        else {\r\n            setanswered(false)\r\n        }\r\n\r\n    }\r\n\r\n    function nextquestion() {\r\n        \r\n        if (questions[countquestion] == undefined || countquestion == 9) {\r\n            setCounter(-1)\r\n            setTimeup(true)\r\n        }\r\n        else \r\n        setcountquestion(countquestion + 1);    \r\n    }\r\n\r\n    useEffect(() => {\r\n    const timer =\r\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n        if (counter === 0) {\r\n            setCounter(10);\r\n            nextquestion();\r\n            setanswered();\r\n        }\r\n    return () => clearInterval(timer);\r\n  }, [counter]);\r\n    //console.log({questions})\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"right\">Time : {counter}</div>\r\n            <Question onclick={onclick} qus={questions[countquestion]} />\r\n            <div>\r\n                {questions[countquestion] !== undefined && answered!==undefined ? answered ? <div>Correct</div> : <div>Wrong answer, correct answer is : {questions[countquestion].correct_answer}</div> : null}\r\n            </div>\r\n            {timeup ? <Redirect to={{ pathname:'/results',results:{score}}} /> : null}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Quiz;","import './App.css';\nimport Landing from './components/Landing';\nimport Results from './components/Results';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Quiz from './components/quiz';\n\n\n\nfunction App() {\n\n  return (\n    <div className='AppMain'>\n      <Router>\n        <Switch>\n            <Route exact path='/' component={Landing} />\n          <Route exact path='/quiz' component={Quiz} />\n          <Route exact path='/results' component={Results} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}